{
    "sourceFile": "js/app.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 3,
            "patches": [
                {
                    "date": 1753046481036,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1753048393014,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,79 +1,106 @@\n-// Select DOM elements\r\n const taskInput = document.getElementById('task-input');\r\n const addButton = document.getElementById('add-task-btn');\r\n-const taskContainer = document.getElementById('task-list');\r\n+const taskList = document.getElementById('task-list');\r\n+const errorMsg = document.getElementById('error-msg');\r\n+const container = document.getElementById('container');\r\n+const darkModeToggle = document.getElementById('dark-mode-toggle');\r\n \r\n-// Array to store tasks as objects\r\n let tasks = [];\r\n \r\n-// Generate a unique ID using timestamp\r\n+// Generate unique ID based on timestamp\r\n function generateId() {\r\n-    return Date.now();\r\n+  return Date.now();\r\n }\r\n \r\n-// Create a task <li> element from a task object\r\n-function createTaskElement(task) {\r\n-    const taskElement = document.createElement('li');\r\n-    taskElement.className = 'task-item';\r\n+// Render the task list from tasks array\r\n+function renderTasks() {\r\n+  taskList.innerHTML = '';\r\n+\r\n+  tasks.forEach(task => {\r\n+    const li = document.createElement('li');\r\n+    li.className = 'task-item';\r\n     if (task.completed) {\r\n-        taskElement.classList.add('completed');\r\n+      li.classList.add('completed');\r\n     }\r\n \r\n-    // Task text\r\n-    const taskText = document.createElement('span');\r\n-    taskText.textContent = task.text;\r\n+    const span = document.createElement('span');\r\n+    span.textContent = task.text;\r\n \r\n-    // Complete button\r\n-    const completeButton = document.createElement('button');\r\n-    completeButton.textContent = 'Complete';\r\n-    completeButton.className = 'complete-btn';\r\n-    completeButton.addEventListener('click', () => {\r\n-        task.completed = !task.completed;\r\n-        renderTasks();\r\n+    const completeBtn = document.createElement('button');\r\n+    completeBtn.textContent = 'Complete';\r\n+    completeBtn.className = 'complete-btn';\r\n+    completeBtn.addEventListener('click', () => {\r\n+      toggleComplete(task.id);\r\n     });\r\n \r\n-    // Remove button\r\n-    const removeButton = document.createElement('button');\r\n-    removeButton.textContent = 'X';\r\n-    removeButton.className = 'remove-btn';\r\n-    removeButton.addEventListener('click', () => {\r\n-        tasks = tasks.filter(t => t.id !== task.id);\r\n-        renderTasks();\r\n+    const removeBtn = document.createElement('button');\r\n+    removeBtn.textContent = 'X';\r\n+    removeBtn.className = 'remove-btn';\r\n+    removeBtn.addEventListener('click', () => {\r\n+      removeTask(task.id);\r\n     });\r\n \r\n-    // Append elements\r\n-    taskElement.appendChild(taskText);\r\n-    taskElement.appendChild(completeButton);\r\n-    taskElement.appendChild(removeButton);\r\n+    li.appendChild(span);\r\n+    li.appendChild(completeBtn);\r\n+    li.appendChild(removeBtn);\r\n \r\n-    return taskElement;\r\n+    taskList.appendChild(li);\r\n+  });\r\n }\r\n \r\n-// Render all tasks in the DOM\r\n-function renderTasks() {\r\n-    taskContainer.innerHTML = '';\r\n-    tasks.forEach(task => {\r\n-        const taskEl = createTaskElement(task);\r\n-        taskContainer.appendChild(taskEl);\r\n-    });\r\n+// Add new task\r\n+function addTask(text) {\r\n+  const newTask = {\r\n+    id: generateId(),\r\n+    text,\r\n+    completed: false\r\n+  };\r\n+  tasks.push(newTask);\r\n+  renderTasks();\r\n+  taskInput.value = '';\r\n }\r\n \r\n-// Add task on button click\r\n+// Toggle complete status\r\n+function toggleComplete(id) {\r\n+  tasks = tasks.map(task =>\r\n+    task.id === id ? { ...task, completed: !task.completed } : task\r\n+  );\r\n+  renderTasks();\r\n+}\r\n+\r\n+// Remove task\r\n+function removeTask(id) {\r\n+  tasks = tasks.filter(task => task.id !== id);\r\n+  renderTasks();\r\n+}\r\n+\r\n+// Handle Add Task button click\r\n addButton.addEventListener('click', () => {\r\n-    const inputValue = taskInput.value.trim();\r\n+  const text = taskInput.value.trim();\r\n+  if (text === '') {\r\n+    errorMsg.classList.remove('hidden');\r\n+    return;\r\n+  }\r\n+  if (!errorMsg.classList.contains('hidden')) {\r\n+    errorMsg.classList.add('hidden');\r\n+  }\r\n+  addTask(text);\r\n+});\r\n \r\n-    if (inputValue === '') {\r\n-        alert('Please enter a task.');\r\n-        return;\r\n-    }\r\n+// Hide error message while typing\r\n+taskInput.addEventListener('input', () => {\r\n+  if (taskInput.value.trim() !== '') {\r\n+    errorMsg.classList.add('hidden');\r\n+  }\r\n+});\r\n \r\n-    const newTask = {\r\n-        id: generateId(),\r\n-        text: inputValue,\r\n-        completed: false\r\n-    };\r\n+// Dark mode toggle button event\r\n+darkModeToggle.addEventListener('click', () => {\r\n+  container.classList.toggle('dark-mode');\r\n \r\n-    tasks.push(newTask);\r\n-    renderTasks();\r\n-    taskInput.value = '';\r\n+  if (container.classList.contains('dark-mode')) {\r\n+    darkModeToggle.textContent = '☀️';\r\n+  } else {\r\n+    darkModeToggle.textContent = '🌙';\r\n+  }\r\n });\r\n"
                },
                {
                    "date": 1753048906664,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -6,40 +6,32 @@\n const darkModeToggle = document.getElementById('dark-mode-toggle');\r\n \r\n let tasks = [];\r\n \r\n-// Generate unique ID based on timestamp\r\n function generateId() {\r\n   return Date.now();\r\n }\r\n \r\n-// Render the task list from tasks array\r\n function renderTasks() {\r\n   taskList.innerHTML = '';\r\n \r\n   tasks.forEach(task => {\r\n     const li = document.createElement('li');\r\n     li.className = 'task-item';\r\n-    if (task.completed) {\r\n-      li.classList.add('completed');\r\n-    }\r\n+    if (task.completed) li.classList.add('completed');\r\n \r\n     const span = document.createElement('span');\r\n     span.textContent = task.text;\r\n \r\n     const completeBtn = document.createElement('button');\r\n     completeBtn.textContent = 'Complete';\r\n     completeBtn.className = 'complete-btn';\r\n-    completeBtn.addEventListener('click', () => {\r\n-      toggleComplete(task.id);\r\n-    });\r\n+    completeBtn.addEventListener('click', () => toggleComplete(task.id));\r\n \r\n     const removeBtn = document.createElement('button');\r\n     removeBtn.textContent = 'X';\r\n     removeBtn.className = 'remove-btn';\r\n-    removeBtn.addEventListener('click', () => {\r\n-      removeTask(task.id);\r\n-    });\r\n+    removeBtn.addEventListener('click', () => removeTask(task.id));\r\n \r\n     li.appendChild(span);\r\n     li.appendChild(completeBtn);\r\n     li.appendChild(removeBtn);\r\n@@ -47,9 +39,8 @@\n     taskList.appendChild(li);\r\n   });\r\n }\r\n \r\n-// Add new task\r\n function addTask(text) {\r\n   const newTask = {\r\n     id: generateId(),\r\n     text,\r\n@@ -59,48 +50,34 @@\n   renderTasks();\r\n   taskInput.value = '';\r\n }\r\n \r\n-// Toggle complete status\r\n function toggleComplete(id) {\r\n   tasks = tasks.map(task =>\r\n     task.id === id ? { ...task, completed: !task.completed } : task\r\n   );\r\n   renderTasks();\r\n }\r\n \r\n-// Remove task\r\n function removeTask(id) {\r\n   tasks = tasks.filter(task => task.id !== id);\r\n   renderTasks();\r\n }\r\n \r\n-// Handle Add Task button click\r\n addButton.addEventListener('click', () => {\r\n   const text = taskInput.value.trim();\r\n   if (text === '') {\r\n     errorMsg.classList.remove('hidden');\r\n     return;\r\n   }\r\n-  if (!errorMsg.classList.contains('hidden')) {\r\n-    errorMsg.classList.add('hidden');\r\n-  }\r\n+  errorMsg.classList.add('hidden');\r\n   addTask(text);\r\n });\r\n \r\n-// Hide error message while typing\r\n taskInput.addEventListener('input', () => {\r\n   if (taskInput.value.trim() !== '') {\r\n     errorMsg.classList.add('hidden');\r\n   }\r\n });\r\n \r\n-// Dark mode toggle button event\r\n darkModeToggle.addEventListener('click', () => {\r\n   container.classList.toggle('dark-mode');\r\n-\r\n-  if (container.classList.contains('dark-mode')) {\r\n-    darkModeToggle.textContent = '☀️';\r\n-  } else {\r\n-    darkModeToggle.textContent = '🌙';\r\n-  }\r\n-});\r\n"
                },
                {
                    "date": 1753049321867,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,20 +1,15 @@\n const taskInput = document.getElementById('task-input');\r\n const addButton = document.getElementById('add-task-btn');\r\n const taskList = document.getElementById('task-list');\r\n const errorMsg = document.getElementById('error-msg');\r\n+const darkToggle = document.getElementById('dark-mode-toggle');\r\n const container = document.getElementById('container');\r\n-const darkModeToggle = document.getElementById('dark-mode-toggle');\r\n \r\n let tasks = [];\r\n \r\n-function generateId() {\r\n-  return Date.now();\r\n-}\r\n-\r\n function renderTasks() {\r\n   taskList.innerHTML = '';\r\n-\r\n   tasks.forEach(task => {\r\n     const li = document.createElement('li');\r\n     li.className = 'task-item';\r\n     if (task.completed) li.classList.add('completed');\r\n@@ -24,14 +19,14 @@\n \r\n     const completeBtn = document.createElement('button');\r\n     completeBtn.textContent = 'Complete';\r\n     completeBtn.className = 'complete-btn';\r\n-    completeBtn.addEventListener('click', () => toggleComplete(task.id));\r\n+    completeBtn.onclick = () => toggleTask(task.id);\r\n \r\n     const removeBtn = document.createElement('button');\r\n     removeBtn.textContent = 'X';\r\n     removeBtn.className = 'remove-btn';\r\n-    removeBtn.addEventListener('click', () => removeTask(task.id));\r\n+    removeBtn.onclick = () => removeTask(task.id);\r\n \r\n     li.appendChild(span);\r\n     li.appendChild(completeBtn);\r\n     li.appendChild(removeBtn);\r\n@@ -41,18 +36,17 @@\n }\r\n \r\n function addTask(text) {\r\n   const newTask = {\r\n-    id: generateId(),\r\n+    id: Date.now(),\r\n     text,\r\n     completed: false\r\n   };\r\n   tasks.push(newTask);\r\n   renderTasks();\r\n-  taskInput.value = '';\r\n }\r\n \r\n-function toggleComplete(id) {\r\n+function toggleTask(id) {\r\n   tasks = tasks.map(task =>\r\n     task.id === id ? { ...task, completed: !task.completed } : task\r\n   );\r\n   renderTasks();\r\n@@ -63,21 +57,23 @@\n   renderTasks();\r\n }\r\n \r\n addButton.addEventListener('click', () => {\r\n-  const text = taskInput.value.trim();\r\n-  if (text === '') {\r\n+  const value = taskInput.value.trim();\r\n+  if (value === '') {\r\n     errorMsg.classList.remove('hidden');\r\n     return;\r\n   }\r\n   errorMsg.classList.add('hidden');\r\n-  addTask(text);\r\n+  addTask(value);\r\n+  taskInput.value = '';\r\n });\r\n \r\n taskInput.addEventListener('input', () => {\r\n   if (taskInput.value.trim() !== '') {\r\n     errorMsg.classList.add('hidden');\r\n   }\r\n });\r\n \r\n-darkModeToggle.addEventListener('click', () => {\r\n+darkToggle.addEventListener('click', () => {\r\n   container.classList.toggle('dark-mode');\r\n+});\r\n"
                }
            ],
            "date": 1753046481036,
            "name": "Commit-0",
            "content": "// Select DOM elements\r\nconst taskInput = document.getElementById('task-input');\r\nconst addButton = document.getElementById('add-task-btn');\r\nconst taskContainer = document.getElementById('task-list');\r\n\r\n// Array to store tasks as objects\r\nlet tasks = [];\r\n\r\n// Generate a unique ID using timestamp\r\nfunction generateId() {\r\n    return Date.now();\r\n}\r\n\r\n// Create a task <li> element from a task object\r\nfunction createTaskElement(task) {\r\n    const taskElement = document.createElement('li');\r\n    taskElement.className = 'task-item';\r\n    if (task.completed) {\r\n        taskElement.classList.add('completed');\r\n    }\r\n\r\n    // Task text\r\n    const taskText = document.createElement('span');\r\n    taskText.textContent = task.text;\r\n\r\n    // Complete button\r\n    const completeButton = document.createElement('button');\r\n    completeButton.textContent = 'Complete';\r\n    completeButton.className = 'complete-btn';\r\n    completeButton.addEventListener('click', () => {\r\n        task.completed = !task.completed;\r\n        renderTasks();\r\n    });\r\n\r\n    // Remove button\r\n    const removeButton = document.createElement('button');\r\n    removeButton.textContent = 'X';\r\n    removeButton.className = 'remove-btn';\r\n    removeButton.addEventListener('click', () => {\r\n        tasks = tasks.filter(t => t.id !== task.id);\r\n        renderTasks();\r\n    });\r\n\r\n    // Append elements\r\n    taskElement.appendChild(taskText);\r\n    taskElement.appendChild(completeButton);\r\n    taskElement.appendChild(removeButton);\r\n\r\n    return taskElement;\r\n}\r\n\r\n// Render all tasks in the DOM\r\nfunction renderTasks() {\r\n    taskContainer.innerHTML = '';\r\n    tasks.forEach(task => {\r\n        const taskEl = createTaskElement(task);\r\n        taskContainer.appendChild(taskEl);\r\n    });\r\n}\r\n\r\n// Add task on button click\r\naddButton.addEventListener('click', () => {\r\n    const inputValue = taskInput.value.trim();\r\n\r\n    if (inputValue === '') {\r\n        alert('Please enter a task.');\r\n        return;\r\n    }\r\n\r\n    const newTask = {\r\n        id: generateId(),\r\n        text: inputValue,\r\n        completed: false\r\n    };\r\n\r\n    tasks.push(newTask);\r\n    renderTasks();\r\n    taskInput.value = '';\r\n});\r\n"
        }
    ]
}